- content_for :meta do
  :javascript
    function addPart(form) {
       if (validPartName()) {
        new Ajax.Updater(
          $('tab_control').down('.pages'),
          '/admin/pages/parts/create/',
          {
            asynchronous: true,
            evalScripts: true,
            insertion: 'bottom',
            onComplete: function(request){ partAdded() },
            onLoading: function(request){ partLoading() },
            parameters: Form.serialize(form)
          }
        );
      }
    }
    function removePart() {
      if(confirm('Remove the current part?')) {
        TabControls['tab_control'].removeSelected();
      }
    }
    function partAdded() {
      var tabControl = TabControls['tab_control'];
      $('add_part_busy').hide();
      $('add_part_button').disabled = false;
      $('add_part_popup').closePopup();
      tabControl.updateTabs();
      tabControl.select(tabControl.tabs.last());
    }
    function partLoading() {
      $('add_part_button').disabled = true;
      $('add_part_busy').appear();
    }
    function validPartName() {
      var partNameField = $('part_name_field');
      var name = partNameField.value.downcase();
      if (name.blank()) {
        alert('Part name cannot be empty.');
        return false;
      }
      if (TabControls['tab_control'].findTabByCaption(name)) {
        alert('Part name must be unique.');
        return false;
      }
      return true;
    }
    
    function addAttribute(form) {
      if (validAttributeName()) {
        new Ajax.Updater(
          $('attributes').down('table'),
          '/admin/pages/attributes/create/',
          {
            asynchronous: true,
            evalScripts: true,
            insertion: 'bottom',
            onComplete: function(response){ attributeAdded(form) },
            onLoading: function(request){ attributeLoading(form) },
            parameters: Form.serialize(form)
          }
        );
      }
    }
    function removeAttribute(button) {  
      var row = $(button).up('tr');
      var name = row.down('label').innerHTML;
      if (confirm('Remove the "' + name + '" attribute?')) row.remove();
    }
    function attributeAdded(element) {
      $(element).previous('.busy').hide();
      $(element).down('.button').enable();
      $(element).up('.popup').closePopup();
    }
    function attributeLoading(element) {
      $(element).down('.button').disable();
      $(element).previous('.busy').appear();
    }
    function validAttributeName() {
      return true;
    }
    
    var lastPageType = "";
    var tagReferenceWindows = {};
    function loadTagReference(part) {
      var pageType = 'Page';
      var window = tagReferenceWindows[pageType];
      if (!tagReferenceWindows[pageType])
        tagReferenceWindows[pageType] = new Popup.AjaxWindow("/admin/docs/tags/" + encodeURIComponent(pageType));
      var window = tagReferenceWindows[pageType];
      if(lastPageType != pageType) {
        window.show();
      } else {
        window.toggle();
      }
      lastPageType = pageType;
      return false;
    }
    
    var lastFilter = "";
    var filterWindows = {};
    function loadFilterReference(part) {
      var filter = $F("part_" + part + "_filter_id");
      if (filter != "") {
        if (!filterWindows[filter]) filterWindows[filter] = new Popup.AjaxWindow("/admin/docs/filters/" + encodeURIComponent(filter), {reload: false});
        var window = filterWindows[filter];
        if(lastFilter != filter) {
          window.show();
        } else {
          window.toggle();
        }
        lastFilter = filter;
      } else {
        alert('No documentation for filter.');
      }
      return false;
    }
    
    var snippetsWindow = undefined;
    function loadSnippetReference(part) {
      if (snippetsWindow) {
        snippetsWindow.toggle();
      } else {
        snippetsWindow = new Popup.AjaxWindow("/admin/docs/snippets/show");
        snippetsWindow.show();
      }
      return false;
    }
    
     var filesWindow = undefined;
      function loadFilesTree(part) {   
        // alert('this will show the files window');
        if (filesWindow) {
          filesWindow.toggle();
        } else {
          filesWindow = new Popup.AjaxWindow("/admin/docs/images/index");
          filesWindow.show();
        }
        return false;
      }

%p.title
  %label{:for=>"page_title"} Page Title
  %input#page_title.textbox.activate{:name=>"page[title]", :size=>"255", :type=>"text", :maxlength=>"255"}/

.drawer
  .drawer_contents#attributes
    %table.fieldset
      %tr
        %th.label
          %label{:for=>"page_slug"} Slug
        %td.field
          %input#page_slug.textbox{:name=>"page[slug]", :size=>"100", :type=>"text", :value=>"/", :maxlength=>"100"}/
        %td.actions
      %tr
        %th.label
          %label{:for=>"page_breadcrumb"} Breadcrumb
        %td.field
          %input#page_breadcrumb.textbox{:name=>"page[breadcrumb]", :size=>"160", :type=>"text", :value=>"Home", :maxlength=>"160"}/
        %td.actions
          %a.popup{:href=>"/admin/pages/attributes/new", :title=>"Add Attribute"}
            %img{:src=>"/images/admin/plus_grey.png", :alt=>"Add Attribute", :title=>""}/
  .drawer_handle
    %a.toggle.more{:href=>"#attributes", :rel=>"toggle[attributes]"} More

#tab_control
  .tabs
    #tab_toolbar
      %a.popup{:href=>"/admin/pages/parts/new", :title=>"Add Part"}
        =image('add_tab', :alt=>"Add Part", :title=>"")
  .pages
    .page{'data-caption'=>"body"}
      .part
        %input#part_0_name{:name=>"part[0][name]", :type=>"hidden", :value=>"body"}/
        #part_0_toolbar.toolbar
          %select#part_0_filter_id{:name=>"part[0][filter_id]"}
            %option{:value=>""} &lt;none&gt;
            %option{:value=>"Markdown"} Markdown
            %option{:value=>"SmartyPants"} SmartyPants
            %option{:value=>"Textile", :selected => "selected"} Textile
        %span.reference_links
          Reference:
          %span#filter_reference_link_0
            %a{:href=>"#", :onclick=>"loadFilterReference(0); return false;"} Filter
          %span#tag_reference_link_0
            %a{:href=>"#", :onclick=>"loadTagReference(0); return false;"} Available Tags
        %div
          %textarea.large#part_0_content{:name=>"part[0][content]", :style=>"width: 100%"}=""
    .page{'data-caption'=>"sidebar"}
      .part
        %input#part_1_name{:name=>"part[1][name]", :type=>"hidden", :value=>"sidebar"}/
        #part_1_toolbar.toolbar
          %select#part_1_filter_id{:name=>"part[1][filter_id]"}
            %option{:value=>""} &lt;none&gt;
            %option{:value=>"Markdown"} Markdown
            %option{:value=>"SmartyPants"} SmartyPants
            %option{:value=>"Textile"} Textile
        %span.reference_links
          Reference:
          %span#filter_reference_link_0
            %a{:href=>"#", :onclick=>"loadFilterReference(0); return false;"} Filter
          %span#tag_reference_link_0
            %a{:href=>"#", :onclick=>"loadTagReference(0); return false;"} Available Tags
        %div
          %textarea.large#part_1_content{:name=>"part[1][content]", :style=>"width: 100%"}=""
.set
  %p
    %label{:for=>"page_layout_id"} Layout
    %select#page_layout_id{:name=>"page[layout_id]"}
      %option{:selected=>"selected", :value=>""} &lt;inherit&gt;
      %option{:value=>"1"} Two Column
      %option{:value=>"2"} Three Column
      %option{:value=>"3"} XML Feed      
  %p
    %label{:for=>"page_status_id"} Status
    %select#page_status_id{:name=>"page[status_id]"}
      %option{:value=>"1"} Draft
      %option{:value=>"50"} Reviewed
      %option{:selected=>"selected", :value=>"100"} Published
      %option{:value=>"101"} Hidden
  %p#published_at
    %label{:for=>"page_published_at"} Published On
    %input.date#page_published_at{:type=>"text", :value => Date.today.to_formatted_s(:long)}/
  

%div
  %input{:type=>"hidden", :id=>"page_lock_version", :name=>"page[lock_version]", :value=>"0"}/